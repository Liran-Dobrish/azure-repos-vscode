{
	"name": "argutec-azure-repos",
	"displayName": "Argutec Azure Repos",
	"description": "Connect to Azure Repos and work with Git and Team Foundation Version Control (TFVC) repositories. Manage your pull requests, work items, and more.",
	"version": "1.2205.2",
	"publisher": "argutec",
	"icon": "assets/team.png",
	"markdown": "standard",
	"galleryBanner": {
		"color": "#313131",
		"theme": "dark"
	},
	"keywords": [
		"VSTS",
		"Team Foundation Server",
		"Team Services",
		"Visual Studio Team Services",
		"TFVC",
		"Azure Repos"
	],
	"categories": [
		"SCM Providers",
		"Other"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/argutec-sro/azure-repos-vscode.git"
	},
	"bugs": "https://github.com/argutec-sro/azure-repos-vscode/issues",
	"license": "SEE LICENSE IN LICENSE.txt",
	"homepage": "https://github.com/argutec-sro/azure-repos-vscode/blob/master/README.md",
	"engines": {
		"vscode": "^1.60.0"
	},
	"activationEvents": [
		"*"
	],
	"main": "./out/extension.js",
	"contributes": {
		"menus": {
			"commandPalette": [
				{
					"command": "team.OpenBlamePage",
					"when": "scmProvider != tfvc"
				},
				{
					"command": "tfvc.Undo",
					"when": "false"
				},
				{
					"command": "tfvc.UndoAll",
					"when": "false"
				},
				{
					"command": "tfvc.ResolveTakeTheirs",
					"when": "false"
				},
				{
					"command": "tfvc.ResolveKeepYours",
					"when": "false"
				},
				{
					"command": "tfvc.Include",
					"when": "false"
				},
				{
					"command": "tfvc.Exclude",
					"when": "false"
				},
				{
					"command": "tfvc.Checkin",
					"when": "false"
				},
				{
					"command": "tfvc.Delete",
					"when": "false"
				},
				{
					"command": "tfvc.Rename",
					"when": "false"
				},
				{
					"command": "tfvc.Open",
					"when": "false"
				},
				{
					"command": "tfvc.OpenFile",
					"when": "false"
				},
				{
					"command": "tfvc.OpenDiff",
					"when": "false"
				},
				{
					"command": "tfvc.Refresh",
					"when": "scmProvider == tfvc"
				},
				{
					"command": "tfvc.ShowOutput",
					"when": "scmProvider == tfvc"
				},
				{
					"command": "tfvc.Sync",
					"when": "scmProvider == tfvc"
				}
			],
			"explorer/context": [
				{
					"command": "tfvc.Delete",
					"group": "9_cutcopypaste",
					"when": "scmProvider == tfvc"
				},
				{
					"command": "tfvc.Rename",
					"group": "9_cutcopypaste",
					"when": "scmProvider == tfvc"
				}
			],
			"scm/title": [
				{
					"command": "tfvc.Checkin",
					"group": "navigation@1",
					"when": "scmProvider == tfvc"
				},
				{
					"command": "tfvc.Refresh",
					"group": "navigation@2",
					"when": "scmProvider == tfvc"
				},
				{
					"command": "tfvc.Sync",
					"group": "1_sync@1",
					"when": "scmProvider == tfvc"
				},
				{
					"command": "team.AssociateWorkItems",
					"group": "3_commit@3",
					"when": "scmProvider == tfvc"
				},
				{
					"command": "team.AssociateWorkItems",
					"group": "3_commit@5",
					"when": "scmProvider == git"
				},
				{
					"command": "tfvc.Checkin",
					"group": "3_commit@4",
					"when": "scmProvider == tfvc"
				},
				{
					"command": "tfvc.UndoAll",
					"group": "3_commit@5",
					"when": "scmProvider == tfvc"
				},
				{
					"command": "tfvc.ShowOutput",
					"group": "5_output",
					"when": "scmProvider == tfvc"
				}
			],
			"scm/resourceState/context": [
				{
					"command": "tfvc.OpenDiff",
					"when": "scmProvider == tfvc",
					"group": "navigation@1"
				},
				{
					"command": "tfvc.OpenFile",
					"when": "scmProvider == tfvc",
					"group": "navigation@2"
				},
				{
					"command": "tfvc.Undo",
					"when": "scmProvider == tfvc && scmResourceGroup != conflicts",
					"group": "3_commit@1"
				},
				{
					"command": "tfvc.Include",
					"when": "scmProvider == tfvc && scmResourceGroup == excluded",
					"group": "1_modification@1"
				},
				{
					"command": "tfvc.Exclude",
					"when": "scmProvider == tfvc && scmResourceGroup == included",
					"group": "1_modification@1"
				},
				{
					"command": "tfvc.ResolveTakeTheirs",
					"when": "scmProvider == tfvc && scmResourceGroup == conflicts",
					"group": "1_modification@1"
				},
				{
					"command": "tfvc.ResolveKeepYours",
					"when": "scmProvider == tfvc && scmResourceGroup == conflicts",
					"group": "1_modification@2"
				},
				{
					"command": "tfvc.Undo",
					"when": "scmProvider == tfvc && scmResourceGroup == conflicts",
					"group": "9_cutcopypaste"
				},
				{
					"command": "tfvc.Undo",
					"when": "scmProvider == tfvc",
					"group": "inline@1"
				},
				{
					"command": "tfvc.Include",
					"when": "scmProvider == tfvc && scmResourceGroup == excluded",
					"group": "inline@2"
				},
				{
					"command": "tfvc.Exclude",
					"when": "scmProvider == tfvc && scmResourceGroup == included",
					"group": "inline@2"
				},
				{
					"command": "tfvc.ResolveTakeTheirs",
					"when": "scmProvider == tfvc && scmResourceGroup == conflicts",
					"group": "inline@2"
				},
				{
					"command": "tfvc.ResolveKeepYours",
					"when": "scmProvider == tfvc && scmResourceGroup == conflicts",
					"group": "inline@3"
				}
			]
		},
		"configuration": {
			"type": "object",
			"title": "Azure Repos extension options",
			"properties": {
				"team.appInsights.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enables Application Insights telemetry collection for the Azure Repos extension."
				},
				"team.logging.level": {
					"type": "string",
					"default": "",
					"description": "Set the logging level for the extension (error, warn, info, verbose, debug)."
				},
				"team.pinnedQueries": {
					"type": "array",
					"default": [
						{
							"account": "",
							"queryText": "",
							"queryPath": ""
						}
					],
					"description": "Specify the account and either the queryText or queryPath of the query you'd like to monitor.  If specified, queryText is preferred over queryPath."
				},
				"team.pollingInterval": {
					"type": "number",
					"default": 5,
					"description": "Specify the number of minutes to wait when polling for new builds and pull requests."
				},
				"team.remoteUrl": {
					"type": "string",
					"default": "",
					"description": "[Not for TFVC] Specify the url to a project collection to use when your source code repository is not hosted with Microsoft. Requires team.teamProject."
				},
				"team.teamProject": {
					"type": "string",
					"default": "",
					"description": "[Not for TFVC] Specify the team project to use when your source code repository is not hosted with Microsoft. Requires team.remoteUrl."
				},
				"team.buildDefinitionId": {
					"type": "number",
					"default": 0,
					"description": "[Not for TFVC] Specify the team project's build definition Id to monitor when your source code repository is not hosted with Microsoft. Requires both team.remoteUrl and team.teamProject."
				},
				"team.showWelcomeMessage": {
					"type": "boolean",
					"default": true,
					"description": "Tracks whether the extension should display the Welcome message after the initial installation."
				},
				"tfvc.location": {
					"type": "string",
					"default": "",
					"description": "[Required for TFVC] Specify the full path to the TF executable or script to use for TFVC functionality."
				},
				"tfvc.proxy": {
					"type": "string",
					"default": "",
					"description": "[Optional for TFVC] Specify the full URL (ex. http://servername:9999/proxy) to the TFS proxy to use for TFVC functionality."
				},
				"tfvc.restrictWorkspace": {
					"type": "boolean",
					"default": false,
					"description": "[Optional for TFVC] Restricts the TFVC workspace to the currently open VS Code workspace."
				}
			}
		},
		"commands": [
			{
				"command": "team.AssociateWorkItems",
				"title": "Associate Work Items",
				"category": "Team"
			},
			{
				"command": "team.OpenNewTask",
				"title": "Create Task",
				"category": "Team"
			},
			{
				"command": "team.OpenNewBug",
				"title": "Create Bug",
				"category": "Team"
			},
			{
				"command": "team.OpenFileHistory",
				"title": "View History",
				"category": "Team"
			},
			{
				"command": "team.OpenBlamePage",
				"title": "View Blame",
				"category": "Team"
			},
			{
				"command": "team.OpenNewPullRequest",
				"title": "Create Pull Request",
				"category": "Team"
			},
			{
				"command": "team.OpenNewWorkItem",
				"title": "Create Work Item",
				"category": "Team"
			},
			{
				"command": "team.GetPullRequests",
				"title": "View Pull Requests",
				"category": "Team"
			},
			{
				"command": "team.OpenBuildSummaryPage",
				"title": "View Build Summary",
				"category": "Team"
			},
			{
				"command": "team.OpenTeamSite",
				"title": "View Website",
				"category": "Team"
			},
			{
				"command": "team.ViewWorkItems",
				"title": "View Work Items",
				"category": "Team"
			},
			{
				"command": "team.ViewWorkItemQueries",
				"title": "View Work Item Queries",
				"category": "Team"
			},
			{
				"command": "team.SendFeedback",
				"title": "Send Feedback",
				"category": "Team"
			},
			{
				"command": "team.Signin",
				"title": "Signin",
				"category": "Team"
			},
			{
				"command": "team.Signout",
				"title": "Signout",
				"category": "Team"
			},
			{
				"command": "tfvc.Checkin",
				"title": "Check In",
				"category": "TFVC",
				"icon": {
					"light": "resources/icons/light/check.svg",
					"dark": "resources/icons/dark/check.svg"
				}
			},
			{
				"command": "tfvc.Exclude",
				"title": "Exclude",
				"category": "TFVC",
				"icon": {
					"light": "resources/icons/light/unstage.svg",
					"dark": "resources/icons/dark/unstage.svg"
				}
			},
			{
				"command": "tfvc.Include",
				"title": "Include",
				"category": "TFVC",
				"icon": {
					"light": "resources/icons/light/stage.svg",
					"dark": "resources/icons/dark/stage.svg"
				}
			},
			{
				"command": "tfvc.Open",
				"title": "Open",
				"category": "TFVC"
			},
			{
				"command": "tfvc.OpenDiff",
				"title": "Open Diff",
				"category": "TFVC"
			},
			{
				"command": "tfvc.OpenFile",
				"title": "Open File",
				"category": "TFVC"
			},
			{
				"command": "tfvc.Delete",
				"title": "Delete (TFVC)",
				"category": "TFVC"
			},
			{
				"command": "tfvc.Rename",
				"title": "Rename (TFVC)",
				"category": "TFVC"
			},
			{
				"command": "tfvc.ShowOutput",
				"title": "Show TFVC Output",
				"category": "TFVC"
			},
			{
				"command": "tfvc.Refresh",
				"title": "Refresh",
				"category": "TFVC",
				"icon": {
					"light": "resources/icons/light/refresh.svg",
					"dark": "resources/icons/dark/refresh.svg"
				}
			},
			{
				"command": "tfvc.ResolveKeepYours",
				"title": "Resolve: Keep Yours",
				"category": "TFVC",
				"icon": {
					"light": "resources/icons/light/resolve-keepyours.svg",
					"dark": "resources/icons/dark/resolve-keepyours.svg"
				}
			},
			{
				"command": "tfvc.ResolveTakeTheirs",
				"title": "Resolve: Take Theirs",
				"category": "TFVC",
				"icon": {
					"light": "resources/icons/light/resolve-taketheirs.svg",
					"dark": "resources/icons/dark/resolve-taketheirs.svg"
				}
			},
			{
				"command": "tfvc.Sync",
				"title": "Sync",
				"category": "TFVC"
			},
			{
				"command": "tfvc.Undo",
				"title": "Undo",
				"category": "TFVC",
				"icon": {
					"light": "resources/icons/light/clean.svg",
					"dark": "resources/icons/dark/clean.svg"
				}
			},
			{
				"command": "tfvc.UndoAll",
				"title": "Undo All",
				"category": "TFVC"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./ && copy ./src/credentialstore/bin/win32/creds.exe /out/credentialstore/bin/win32/creds.exe /Y"
	},
	"devDependencies": {
		"@types/chai": "^4.3.3",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.0.0",
		"@types/node": "^14.x",
		"@types/opener": "^1.4.0",
		"@types/parse-git-config": "^3.0.1",
		"@types/q": "^1.5.5",
		"@types/underscore": "^1.11.4",
		"@types/uuid": "^8.3.4",
		"@types/vscode": "^1.60.0",
		"@types/xml2js": "^0.4.9",
		"@types/xmldoc": "^1.1.6",
		"@typescript-eslint/eslint-plugin": "^5.9.1",
		"@typescript-eslint/parser": "^5.9.1",
		"@vscode/test-electron": "^2.1.0",
		"azure-pipelines-task-lib": "^3.1.10",
		"chai": "^4.3.6",
		"del": "^6.0.0",
		"eslint": "^8.6.0",
		"glob": "^7.2.0",
		"mocha": "^9.2.2",
		"mocha-explorer-launcher-scripts": "^0.4.0",
		"nyc": "^15.1.0",
		"path": "^0.12.7",
		"should": "^13.2.3",
		"ts-loader": "^9.3.1",
		"typescript": "4.5.4",
		"webpack": "^5.74.0",
		"webpack-cli": "^4.10.0",
		"yargs": "^17.3.1"
	},
	"dependencies": {
		"applicationinsights": "2.2.0",
		"azure-devops-node-api": "^11.1.0",
		"event-stream": "^4.0.1",
		"fs": "0.0.1-security",
		"git-repo-info": "^2.1.1",
		"open": "8.4.0",
		"opener": "^1.5.2",
		"parse-git-config": "^3.0.0",
		"q": "^1.5.1",
		"readable-stream": "^3.6.0",
		"request-promise-native": "^1.0.9",
		"underscore": "^1.13.1",
		"url": "^0.11.0",
		"uuid": "^8.3.2",
		"vsts-device-flow-auth": "^1.136.0",
		"winston": "3.4.0",
		"xml2js": "^0.4.23",
		"xmldoc": "^1.1.2"
	},
	"__metadata": {
		"id": "7151f0d9-9d17-4bbb-87d2-01f3f94eeb60",
		"publisherDisplayName": "Argutec",
		"publisherId": "96ec5c63-9292-44ff-8819-5a9b153c2252",
		"isPreReleaseVersion": false
	}
}
